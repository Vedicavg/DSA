//13 Feb 2025
1. Check if two strings are anagram of each other :
https://leetcode.com/problems/valid-anagram/
2. Maximum Nesting Depth of Paranthesis :
https://leetcode.com/problems/maximum-nesting-depth-of-the-parentheses/
3. ROMAN TO INT :
https://leetcode.com/problems/roman-to-integer/
4. Implement Atoi :
https://leetcode.com/problems/string-to-integer-atoi/


/*************ROMAN TO INT********************/
class Solution {
public:

    int num(char c){
        if (c == 'I')
        return 1;

        else if (c == 'V')
        return 5;

        else if (c == 'X')
        return 10;

        else if (c == 'L')
        return 50;

        else if(c == 'C')
        return 100;

        else if(c == 'D')
        return 500;

        else
        return 1000;


    }
    int romanToInt(string s) {
        int ans = 0;

        for(int i = 0; i<s.size()-1; i++){
            if(num(s[i+1]) > num(s[i])){
                ans -= num(s[i]) ;
            }
            else
            ans += num(s[i]);
        }

        ans += num(s[s.size()-1]);
        return ans;
    }
};